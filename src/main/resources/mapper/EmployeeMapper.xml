<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.personal.employee.mapper.EmployeeMapper">
    <select id="employee_search_count" parameterType="EmpSearchVO" resultType="int">
        select count(*) from employees
        <where>
          <if test="emp_name != ''">
            emp_name LIKE CONCAT('%', #{emp_name}, '%')
		      </if>
          <if test="fieldCD != ''">
           and fieldCD = #{fieldCD}
		      </if>
          <if test="classCD != ''">
           and classCD = #{classCD}
		      </if>
          <if test="lebelCD != ''">
           and lebelCD = #{lebelCD}
		      </if>
          <if test="employment_statusCD != ''">
           and employment_statusCD = #{employment_statusCD}
		      </if>
          <if test="s_start_date != ''">
           and start_date <![CDATA[>=]]> #{s_start_date}
          </if>
          <if test="e_start_date != ''">
            and start_date <![CDATA[<=]]> #{e_start_date}
		      </if>
          <if test="s_last_date != ''">
           and last_date <![CDATA[>=]]> #{s_last_date}
		      </if>
          <if test="e_last_date != ''">
           and last_date <![CDATA[<=]]> #{e_last_date}
		      </if>
          and statusCD = 'A2'
        </where>
    </select>
    <select id="employee_search" parameterType="EmpSearchVO" resultType="EmployeeVO">
        select * from employees
        <where>
          <if test="emp_name != ''">
            emp_name LIKE CONCAT('%', #{emp_name}, '%')
		      </if>
          <if test="fieldCD != ''">
           and fieldCD = #{fieldCD}
		      </if>
          <if test="classCD != ''">
           and classCD = #{classCD}
		      </if>
          <if test="lebelCD != ''">
           and lebelCD = #{lebelCD}
		      </if>
          <if test="employment_statusCD != ''">
           and employment_statusCD = #{employment_statusCD}
		      </if>
          <if test="s_start_date != ''">
           and start_date <![CDATA[>=]]> #{s_start_date}
          </if>
          <if test="e_start_date != ''">
            and start_date <![CDATA[<=]]> #{e_start_date}
		      </if>
          <if test="s_last_date != ''">
           and last_date <![CDATA[>=]]> #{s_last_date}
		      </if>
          <if test="e_last_date != ''">
           and last_date <![CDATA[<=]]> #{e_last_date}
		      </if>
          and statusCD = 'A2'
        </where>
        limit #{limit}
        offset #{offset}
    </select>

    <select id="employee_detail_info" parameterType="String" resultType="EmployeeVO">
      select * from employees
      where emp_idx = #{emp_idx}
    </select>
    <select id="employee_detail_skill" parameterType="String" resultType="SkillVO">
      select * from employee_skill
      where emp_idx = #{emp_idx}
    </select>

    <select id="empProCus_list" parameterType="String" resultType="ProEmpCusVO">
      select * from customer_project_employee_view
      where emp_idx = #{emp_idx} and statusCD = 'A2'
    </select>

    <insert id="emp_insert" parameterType="EmployeeVO">
      <selectKey keyProperty="emp_idx" resultType="String" order="AFTER">
        SELECT LAST_INSERT_ID()
      </selectKey>
      insert into employees (emp_name,f_resident_num,b_resident_num,phone,f_email,
      image,zip_code,main_adress,detail_adress,extra_adress,start_date,last_date,
      fieldCD,agreementCD,classCD,lebelCD,employment_statusCD,genderCD,e_emailCD,note)
      values (#{emp_name}, #{f_resident_num}, #{b_resident_num}, #{phone}, #{f_email}, 
      #{image}, #{zip_code}, #{main_adress}, #{detail_adress}, #{extra_adress},
      <if test="start_date != null and start_date != ''">#{start_date}</if>
      <if test="start_date == null or start_date == ''">NULL</if>,
      <if test="last_date != null and last_date != ''">#{last_date}</if>
      <if test="last_date == null or last_date == ''">NULL</if>,
      #{fieldCD}, #{agreementCD}, #{classCD}, #{lebelCD},
      #{employment_statusCD}, #{genderCD}, #{e_emailCD}, #{note})
    </insert>

    <insert id="emp_insert_skill" parameterType="Map">
      insert into employee_skill (emp_idx, skillCD)
      values
      <foreach collection="skill_list" item="skill" separator=",">
        (#{emp_idx}, #{skill})
      </foreach>
    </insert>

    <!-- 사원 여러명 삭제 -->
    <update id="emp_delete" parameterType="List">
      UPDATE employees 
      set statusCD = 'A1'
      where
      <foreach collection="list" item="emp_idx" separator=" or">
        emp_idx = #{emp_idx}
      </foreach>
    </update>

    <!-- <resultMap id="EmpProResultMap" type="ProEmpVO">
      <id property="pe_idx" column="pe_idx"/>
      <result property="project_idx" column="project_idx"/>
      <result property="emp_idx" column="emp_idx"/>
      <result property="in_date" column="in_date"/>
      <result property="out_date" column="out_date"/>
      <result property="roleCD" column="roleCD"/>
      <result property="scoreCD" column="scoreCD"/>
      <result property="statusCD" column="statusCD"/>
      <result property="note" column="note"/>
      
      <association property="projectVO" javaType="ProjectVO" 
      select="empProReMap" column="project_idx"/>
    </resultMap>

  <select id="empPro_list" parameterType="String" resultMap="EmpProResultMap">
    select * from project_employee where emp_idx = #{emp_idx}
  </select>
  <select id="empProReMap" parameterType="String" resultType="ProjectVO">
    select * from projects where project_idx = #{project_idx}
  </select> -->

</mapper>
